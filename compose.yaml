services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
      PORT: 3000
      # MySQL environment variables
      DB_HOST: mysql
      DB_NAME: notesdb
      DB_USER: notes_user
      DB_PASS: notes_password
      # Redis environment variables
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 3000:3000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_DATABASE=notesdb
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=notes_user
      - MYSQL_PASSWORD=notes_password
    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql-data:
  redis-data:
